게시판 무작정따라하기 project 2022 10 13 10 10 += spring initializr
게시판 무작정따라하기 project 2022 10 13 10 10 += Gradle
게시판 무작정따라하기 project 2022 10 13 10 10 += java 8
게시판 무작정따라하기 project 2022 10 13 10 10 += spring boot 2.5.4
게시판 무작정따라하기 project 2022 10 13 10 10 += group id/name1
게시판 무작정따라하기 project 2022 10 13 10 10 += artifact id/group2
게시판 무작정따라하기 project 2022 10 13 10 10 += packaging/jar
게시판 무작정따라하기 project 2022 10 13 10 10 += spring web
게시판 무작정따라하기 project 2022 10 13 10 10 += spring data jpa
게시판 무작정따라하기 project 2022 10 13 10 10 += maria db driver
게시판 무작정따라하기 project 2022 10 13 10 10 += thymeleaf
게시판 무작정따라하기 project 2022 10 13 10 10 += lombok

게시판 무작정따라하기 project 2022 10 13 10 10 += application.properties
	server.port=9090
	spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
	spring.datasource.username=jhp
	spring.datasource.password=1234 
	spring.datasource.url=jdbc:mysql://localhost.com:3306/schema3
	약간 3306에 따로 띄우는 느낌이 듭니다. db도 서버인가 하는 생각이 듭니다 - 박정훈 -
	

작업순서
	페이지
		admin board write page + 
			AdminboardWrite.html
			Adminboardlist
				AdminboardBoards.html
				AdminboardBoard.html
			AdminboardWrite.css
			Adminboardlist.css
			@controller
				class AdminBoardController{
					@Autowired
					//AdminBoardService adminBoardService;
				
					// admin board write page control logic
					@GetMapping("/AdminBoard/")
					String controllView1(AdminBoardEntity adminBoardEntity){
						//db에서 data를 가져오는 로직
						return "adminMealkitManagement";
					}
					@PostMapping("/AdminBoard/write")
					String controllView2(AdminBoardEntity adminBoardEntity){
						adminBoardService.savelogic(adminBoardEntity);
						return "adminMealkitManagement";
					}
					
					
					
					
					//admin boards  page control logic
					@GetMapping("/AdminBoard/boards")
					String controllView3(Model model){   // 보아하니 view에 뿌려줄 데이터를 담는 저장소 정도로 보입니다.
						
						model.AddAttribute("boards",adminBoardService.getBoards() )
						return "AdminBoard/boards/";
					}
					
					
					//admin board  page control logic
					@GetMapping("/AdminBoard/board")
					String controllView3(Model model,Integer id ){    
						model.AddAttribute("board",adminBoardService.getBoard(id) )
						return "AdminBoard/board/";
					}
					
					
					
			
					//delete
					@GetMapping("/AdminBoard/board/delete")
					String controllView3(Integer id ){    
						adminBoardService.deleteBoard(id);
						return "redirect:/AdminBoard/boards";
					}
					
					
					
					
			
					//update
					@GetMapping("/AdminBoard/board/update/{id}")
					String controllView6(@Pathvariable(name="id") Integer id ){    
					model.AddAttribute("board",adminBoardService.getBoard(id) )
						return "AdminBoard/board/modify";
					} 
					//update
					@PostMapping("/AdminBoard/board/update/{id}")
					String controllView6(@Pathvariable(name="id") Integer id, Board board ){    
					model.AddAttribute("board",adminBoardService.getBoard(id) )
						Board board_ = adminBoardService.updateBoard(id);
						board_.setTitle(board.getTitle)
						board_.setContent(board.getContent)
						adminBoardService.saveToRepository(board_)
						return "redirect:/boards";
					}
					
					
					

				}
			@entity
				class AdminBoardEntity{
					@Id
					..Gene..
					Integer id;
				
				}
			@service
				class AdminBoardservice{
					@Autowired
					AdminBoardRepository adminBoardRepository;
					
					void saveToRepository(AdminBoardEntity adminBoardEntity){
						adminBoardRepository.save(adminBoardEntity);
					}
					void deleteBoard(Integer id){
						adminBoardRepository.deleteById(id);
					}
					
					List<Board> getBoards(){
						return adminBoardRepository.findAll();
					}
					Board getBoard(Integer id){
						//return adminBoardRepository.findById(id);   // 이렇게 작성하면 data type이 optional 로서 return 되어 사용하려면 추가적인 후작업이 요구되어집니다. optional 에서 board로 casting이 가능한가요?
						return adminBoardRepository.findById(id).get();   // 이렇게 작성하면 data type이 Board 로서 return
					}
				}
			@repository
				interface AdminBoardRepository extends JpaRepository {
				}
	