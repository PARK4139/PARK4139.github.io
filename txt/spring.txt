EJB(Enterprise Java Beans)

	EJB는 기업환경의 시스템을 구현하기 위한 서버측 컴포넌트 모델







엔터프라이즈 애플리케이션

	엔터프라이즈 애플리케이션은 이름 그대로 기업형 프로그램으로 

	자바에서는 developed via JavaEE (Java Enterprise Edition)
	JaveEE ≒ JavaSE(Java Standard Edition)에 + (서버측 개발을 위한 기능이 더해진 자바 버전)

	스프링은 이런 JaveEE를 대체하기 위해 개발

	엔터프라이즈 애플리케이션을 개발하기 위해서 JavaEE가 사용되었는데 JavaEE에서 핵심적인 역할을 하는 것이 EJB 이다.

	EJB는 엔터프라이즈 애플리케이션을 쉽게 작성할 수 있도록하는 목표를 가지고 있었지만 개발자들에게 EJB는 생각 보다 쉽지 않았다.

	예를들어 소스코드 측면에서 EJB 관련 클래스를 반드시 사용해야 한다거나, 개발환경 측면에서 EJB 컨테이너를 사용해야 한다는 제약은 개발 생산성과 유지 보수성 저하와 테스트와 배포의 어려움을 가져왔다. 

	이러한 문제점들을 해결하고 엔터프라이즈 애플리케이션 개발을 더 쉽게 하기 위해 스프링이 탄생하였다.




spring
	spring means Spring framwork
	
	spring greater than 5.1 introduction

	스프링은 의심할 여지없이 훌륭한 프레임워크

	엔터프라이즈 애플리케이션 개발을 위한 플랫폼

	스프링은 객체를 생성해서 디펜던시를 통해 제공해주고, 스프링을 사용하지 않았더라면 작성했을 많은 코드들을 안써도 되도록 해줍니다.
 
	하지만 설정과 학습측면에서는 많은 것이 요구되기도 하였습니다.

	pom에 작성할 dependency들을 찾아야 하고, 호환이 맞는지 확인도 해야할 것입니다.


	또한, 스프링을 활용하기 위해 많은 beans에 대해서 설정을 할 것입니다.


	예컨데, JSON 포맷을 지원하는 내장톰캣으로 작동하는 스프링 MVC 기반 REST 어플리케이션을 생성한다면, 

	pom에 대략 8개~10개정도의 dependency를 만들어야 할 것입니다.
 

	예를 들어, spring-core. jar, spring-mvc. jar, jackson. jar, embedded-tomcat. jar 등등 말이지요.
 
	하지만 이것은 아주 쉬운 설정의 케이스입니다.


	스프링의 진입장벽은 높다

	토비의 스프링 책, 스프링 공부 서적으로 유명한 

	

	

	

Spring Boot

	자바로 백엔드 개발을 하기 위해서는 스프링 프레임워크가 거의 필수라고 볼 수 있다.
 

	스프링의 진입장벽을 낮춰주는 매우 유요한 툴

	스프링부트는 이러한 어려움들을 없애주고 중요한 비즈니스 코드를 작성하도록 도와줍니다.
 위에서 언급한 스프링부트의 특징들은 모두 스프링 기반 자바 개발을 쉽게하는데 목표로 하고 있습니다.


	스프링 어플리케이션 개발을 쉽고 간단하게 개발하기 위한 도구

	spring 개발 툴 제공

	AutoConfiguration(자동설정), 스타터 디펜던시, 스프링부트 CLI, Actuator, Spring Initializer

	Spring 기반 Java 웹어플리케이션을 개발할 때 발생했던 고통과 어려움을 없애주는 기능

	



Spring Boot의 목표 4가지

	1.
 웹 에플리케이션 구조 잡는데 하루 이틀이 걸리는 단점을 부트를 쓰면 손쉽게 사용이 가능

	2.
 기본설정에서 요구사항에 따라 다양하게 개발 가능

	3.
 프로젝트의 모니터링 헬스체크 등 더 많이 제공

	4.
 코드 제너레이션 사용하는게 아니다.
 xml 환경설정이 필요 없다.








*Spring Boot 2.
0.
0RC2 system requirement 

- Java 8 or 9(java -version)

- Spring Frameworkd 5.
0.
4 RELEASE 

- apache Maven 3.
2+(mvn -version)

- Gradle 4





3.
 Servlet Containers (Servlet 3.
0+ 호환 가능한 컨테이너)

- Tomcat 8.
5

- Jetty 9.
4

- Undertow 1.
4 







- pom.
xml generation(mvn dependency:tree)

1.
 의존성 추가 (Spring-boot-starter-web) 추가 시 하위 기본 의존성들이 들어감 

2.
 Spring Boot 메이븐 플러그인 추가

3.
 Spring  parent(DependencyManagement)추가

4.
 Repositories 추가 





4.
 Java Main생성 

 

 

간단정리 

1.
 Java 8버전 설치

2.
 Maven 설치 

3.
 pom.
xml 설명

4.
 실행가능한 Java main문 만들기 

5.
 서버실행 







STS eclipse plug in 

____________________________________________________________________________________________________________________________________



project IDE generation simply 
	generate project via Spring Initializr
	drag n drop project to intellij





Spring Initializr understanding
	STS와 유사 기능으로 볼 수 있습니다.




spring libraries understanding
	spring-boot-starter-tomcat
		web server as tomcat






gradle project file tree structure understanding


maven project file tree structure understanding











