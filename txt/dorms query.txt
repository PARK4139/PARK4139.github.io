
-------------------------------------------------------------------------------------------------------  withv_�ܺ�_���̺� ���� (��������)

-- date updated this file             : 2022 11 30 15 33 
-- itc_dorm_db_type                   : oracle
-- itc dorm db dev server connection  : DESKTOP-I25VIFM(withv jhp pc host name) ����  withv server �� �� �ִ� itc dorm db dev server  �� ���� �Ǿ� �ֽ��ϴ�.
-- itc dorm web dev server connection : DESKTOP-I25VIFM(withv jhp pc host name) ���� local server �μ�  itc dorm web server �� copied from 1st.
-- logic flow						  : db scheduler ���� Ư�� ȣ�� ����(���� ��ð� �̶����) �� �����ϸ� 22/23/4/42/5/62 schedule �۾� ���� dorm.batch_get_member(procedures) �� ���� �� ���Դϴ�.
-- 										dorm.batch_get_member excution elapsed time <= 1 min (�ʹ� �� ó�� �ð��̶�� �մϴ�.)
-- inspection flow                    : MACS client(itc dorm VPN program) �� ���ؼ� itc op server �� remote access �� �Ͽ� 
--										sql developer �� ���� dorm �� db scheduler �� ���� ��ϵ� �������� schedule �� Ȯ�� �� �� ���� ������ ���Դϴ�.
 
-- dev db server ������ �����δ� withv ���ο��� ��ȸ �翬�� �ȵǴ� ���̺�

SELECT * 
from DORM_STUDENT_VW

-------------------------------------------------------------------------------------------------------  withv_�ܺ�_���̺� ���� ( _____ ����)
-------------------------------------------------------------------------------------------------------  member_tb

 -- ��������(withv �ܺ� ����) �� �Ǿ� member_tb �� �������� �� �����Ǿ� ���ɴϴ�.
SELECT count(*)
from member_tb
SELECT *
from member_tb
SELECT *
from member_tb
WHERE 1<=rownum
AND rownum<=1 
SELECT *
from member_tb
WHERE point IS NOT NULL 
SELECT *
from member_tb
WHERE point IS NULL 
SELECT id_no
from member_tb
SELECT substr(id_no,1,6)
from member_tb
SELECT substr(id_no,7,13)
from member_tb
	
SELECT count(*)
from member_tb -- th:text="#list.size(____TB)" ������ �Ǵ� �� ����.
SELECT *
from member_tb WHERE std_no = ? AND user_nm = ? AND substr(id_no,1,6) = ? 
SELECT STD_NO
from MEMBER_TB 
Select a.id_no, a.std_no, a.user_nm, fnc_get_code_nm(a.sex) sex_nm,  fnc_get_code_nm(a.grade_cd) grade_cd_nm , nvl(fnc_get_dept_nm_2(a.sust,a.acl_cd),'')as sust_nm, a.cel, fnc_get_code_nm(a.acl_cd2) acl_cd2_nm ,  fnc_get_code_nm(a.addr_area) addr_area_nm, a.email 
from Member_TB a LEFT OUTER JOIN (SELECT up_dept_Cd,dept_cd FROM cmmn510) C ON A.sust=C.dept_cd 
where 1=1
order by id_no asc 
 
Select a.INDREG_METHOD_NEW 
from Member_TB a LEFT OUTER JOIN (SELECT up_dept_Cd,dept_cd FROM cmmn510) C ON A.sust=C.dept_cd 
where 1=1
order by id_no asc 
-- admin �� D/U/C �۾� ��� Member_TB.INDREG_METHOD_NEW=1 �� �ǵ��� �Ǿ��ֽ��ϴ�.
-- �ֽŵ����ȸ �� ���� checked ���·� admin �� R �۾��� �Ѵٸ�  Member_TB.INDREG_METHOD_NEW=1 �� ������ ��ȸ�� �ǰ�
-- �ֽŵ����ȸ �� ���� unchecked ���·� admin �� R �۾��� �Ѵٸ�  ��系�� ��ȸ�� �ǵ��� �Ǿ� �ֽ��ϴ�. 
-- 2022-12-01=�����ƿ��������
SELECT *
from member_tb
WHERE TO_CHAR(REG_DATE,'YYYY-MM-DD')='2022-12-01'
-------------------------------------------------------------------------------------------------------  apply_dorm_tb
-- ���������ý��� ���� ���� �ٽ��� �Ǵ� ���̺� �� ���� �ֽ��ϴ�.
SELECT count(*) 
FROM dorm_apply_tb	
SELECT * 
FROM dorm_apply_tb	

SELECT rownum, dat.* 
FROM dorm_apply_tb dat	
  
SELECT rownum, dat.*
FROM dorm_apply_tb dat
where 1<= rownum  
AND rownum <= 1
 
SELECT ID_NO
from dorm_apply_tb -- dorm_apply_tb ���� PK �μ� ������ �Ǿ����µ� �ߺ��� �ִ��� Ȯ���غ���
-- dorm_apply_tb ���� ID_NO �ߺ�����
SELECT dat.ID_NO , COUNT(*) AS �ߺ�����
FROM dorm_apply_tb dat  
 GROUP BY dat.ID_NO
HAVING COUNT(*) > 1 
-- dorm_apply_tb ���� 
-- PK ��� tb ���Ǽ����� �ۼ��� �Ǿ� �ֱ⵵ �ѵ� dev db server �� sample ���� �ߺ��� �ִ�.

SELECT SUBSTR(ID_NO,0,7)
from dorm_apply_tb -- 0 1 �� ������...
SELECT SUBSTR(ID_NO,1,7)
from dorm_apply_tb -- 0 1 �� ������...�׷� �� 0 �� �����ϱ� 0����
SELECT SUBSTR(ID_NO,0,6)
from dorm_apply_tb  -- ������� ..
SELECT SUBSTR(ID_NO,7,13)
from dorm_apply_tb -- �Ϸù�ȣ
SELECT dat.ID_NO ||' '||dat.RECRUIT_YEAR||' '||dat.RECRUIT_CODE AS ������_dorm_apply_tb��_PK����
FROM dorm_apply_tb dat

SELECT dat.ID_NO ||' '||dat.RECRUIT_YEAR||' '||dat.RECRUIT_CODE AS  ������_dorm_apply_tb��_PK���� , COUNT(*) AS �ߺ�����
FROM dorm_apply_tb dat  
GROUP BY dat.ID_NO ||' '||dat.RECRUIT_YEAR||' '||dat.RECRUIT_CODE
HAVING COUNT(*) > 1 
-- �ߺ����� ��� �ߺ��� �Ǵ� ���� �ϳ��� ������. 3���� �÷����� ��� ������ PK �� �ƴѰ� �ʹ�.
-- �����غ��� �̷� ��� ������ PK �� �̷�� �÷����� composit key ��� �θ��� ������ �ִ� ������ ���δ�.

SELECT ACL_CD2
FROM  DORM_APPLY_TB dat
WHERE ACL_CD2 IS NOT NULL 

SELECT count(*)
FROM  DORM_APPLY_TB dat
WHERE ACL_CD2 IS NOT NULL 

SELECT count(*)
FROM  DORM_APPLY_TB dat
WHERE ACL_CD2 IS NULL 

SELECT APPLY_UNIT
FROM  DORM_APPLY_TB dat
WHERE APPLY_UNIT IS NOT NULL 
SELECT DORM_EXP_RESERVE
FROM  DORM_APPLY_TB dat
WHERE DORM_EXP_RESERVE IS NOT NULL 
 
SELECT FOOD_CODE 
FROM dorm_apply_tb dat 
--WHERE FOOD_CODE IS NOT NULL 
WHERE FOOD_CODE IS NULL 

SELECT MAX(room_no) AS ����ū���ȣ
FROM dorm_apply_tb dat
WHERE room_no IS NOT null

SELECT room_no
FROM dorm_apply_tb dat
WHERE room_no IS NOT NULL

SELECT  room_no AS ���ȣ , dat.*
FROM dorm_apply_tb dat
WHERE room_no<>0
ORDER BY room_no desc

-------------------------------------------------------------------------------------------------------  apply_obj_tb

--apply_obj_tb �� ��������м������� �� ��� �ֽ��ϴ�. ������ �������������� ����.
SELECT rownum, NVL(mem_include_yn,' ') , aot.* 
FROM apply_obj_tb aot 
SELECT NVL(mem_include_yn,' ') 
FROM apply_obj_tb

-------------------------------------------------------------------------------------------------------  DORM_APPLY_TB
 
SELECT count(*)
from DORM_APPLY_TB
SELECT *
from DORM_APPLY_TB
SELECT apply_unit
from DORM_APPLY_TB WHERE apply_unit='6111000'  -- ��ü����
SELECT apply_unit
from DORM_APPLY_TB WHERE apply_unit='6110000'  -- �߰�����?  CODE_TB�� ����. �߰��ؾ� �մϱ�? 
 
SELECT ACL_CD2
from DORM_APPLY_TB

SELECT COUNT(*)  
FROM dorm_apply_tb A  
INNER JOIN edu_schedule_tb B  
ON A.recruit_year=B.recruit_year  
AND A.recruit_code=B.recruit_code  
AND A.move_form=B.move_form  
WHERE TO_CHAR(SYSDATE,'YYYY-MM-DD') BETWEEN s_date AND e_date  
AND ( room_no<>'0' AND room_no IS NOT NULL)  
AND status='2402000'  
AND del_yn='N'  
MKR
-- ing
-- INNER JOIN�� REF_TABLE RTB, JOIN_TABLE JTB �� TB�� RECORD�� (RTB�� JTB�� JOIN ���ǿ� �´� �����͸� ��ȸ, JOIN ���ǿ� ���� �ʴ� �����Ͱ� ��ȸ�� �ش� ���ڵ带 ��ȸ���� ����.)
-- LEFT/RIGHT/FULL OUTER JOIN�� RTB�� JTB �� TB�� RECORD�� JOIN ���ǿ� �������� �ʾƵ� Null�� �־ ��ȸ, �� left/right/full�� ���� �����Ͽ� ��ȸ

		SELECT a.dorm_id, B.RECRUIT_YEAR, b.recruit_code, FNC_GET_CODE_NM(B.RECRUIT_CODE) AS RECRUIT_YEAR, A.ID_NO, NVL(STD_NO,SCHOOL_NO) AS std_no, USER_NM, FNC_GET_CODE_NM(SEX) AS SEX,NVL(FNC_GET_CODE_NM(SCHOLARSHIP),'�ش����') AS SCHOLARSHIP_NM, SCHOLARSHIP, FNC_GET_CODE_NM(NATION) AS NATION, FNC_GET_CODE_NM(A.ACL_CD) AS ACL_CD, FNC_GET_CODE_NM(B.ACL_CD2) AS ACL_CD2, FNC_GET_CODE_NM(APPLY_UNIT) AS APPLY_UNIT, FNC_GET_CODE_NM(MOVE_FORM) AS MOVE_FORM_NM , MOVE_FORM, FNC_GET_CODE_NM(ROOM_KIND) AS ROOM_KIND_NM , ROOM_KIND, VIRTUAL_ACCOUNT, APPLY_DATE ,IN_AMT_DATE, IN_AMT,a.dorm_id, BENEFIT_AMT+SCHOLAR_AMT+ETC_AMT as BENT_AMT, IN_AMT-BENEFIT_AMT- SCHOLAR_AMT- ETC_AMT, DORM_EXP_RESERVE,BENEFIT_AMT,SCHOLAR_AMT,ETC_AMT ,TO_CHAR(TO_DATE(TRBEGIN_IL),'YYYY-MM-DD') ||' ~ '|| TO_CHAR(TO_DATE(TREND_IL),'YYYY-MM-DD') as tr_il 
		 
from DORM_APPLY_TB B  
	INNER JOIN  MEMBER_TB A
			ON A.ID_NO=B.ID_NO 
	INNER JOIN (SELECT ID_NO, RECRUIT_YEAR,RECRUIT_CODE,SUM(IN_AMT) AS IN_AMT, SUM(BENEFIT_AMT) AS BENEFIT_AMT, SUM(SCHOLAR_AMT) AS SCHOLAR_AMT, SUM(ETC_AMT) AS ETC_AMT,IN_AMT_DATE 
					FROM EXPENCE_TB 
					WHERE RECRUIT_YEAR='" + ht.get("recruit_year") + "' 
					AND RECRUIT_CODE='" + ht.get("recruit_code") + "' 		
					AND SUBSTR(APPLY_CODE,1,4)='1001' 
					GROUP BY ID_NO,RECRUIT_YEAR,RECRUIT_CODE, IN_AMT_DATE ) C 
		   	ON B.RECRUIT_YEAR=C.RECRUIT_YEAR 
		   AND B.RECRUIT_CODE=C.RECRUIT_CODE 
		   AND B.ID_NO=C.ID_NO 
LEFT OUTER JOIN CMMN510 D 
           	 ON A.SUST=D.DEPT_CD 
LEFT OUTER JOIN VACS_VACT E 
	         ON B.VIRTUAL_ACCOUNT=RTRIM(ACCT_NO) 
	      WHERE B.STATUS='2402000' 
		    AND B.DEL_YN='N' 
		    AND A.ID_NO NOT IN (
				 SELECT ID_NO 
				  
from IN_AMT_TB 
				  WHERE RECRUIT_YEAR='" + ht.get("recruit_year") + "' 
					AND RECRUIT_CODE='" + ht.get("recruit_code") + "' 
					AND SUBSTR(APPLY_CODE,1,4)='1001' 
					AND IN_RETURN_CODE='4301000') 
            AND C.RECRUIT_YEAR='" + ht.get("recruit_year") + "' 
            AND C.RECRUIT_CODE='" + ht.get("recruit_code")	 + "' 

if(!ht.get("building").equals("")) strSQL.append("\n").append("and b.bil_code = '" + ht.get("building") + "' ")
if(!ht.get("building_floor").equals("")) strSQL.append("\n").append("and b.fl_code = '" + ht.get("building_floor") + "' ")
if(!ht.get("building_room_no").equals("")) strSQL.append("\n").append("and b.room_no = '" + ht.get("building_room_no") + "' ")
if(!ht.get("position_lcd").equals("")) strSQL.append("\n").append("AND A.ACL_CD='" + ht.get("position_lcd") + "' ")
if(!ht.get("position_mcd").equals("")) strSQL.append("\n").append("AND D.up_dept_Cd ='" + ht.get("position_mcd") + "' ")
if(!ht.get("position_scd").equals("")) strSQL.append("\n").append("AND a.sust='" + ht.get("position_scd") + "' ")
if(!ht.get("acl_cd2").equals("")) strSQL.append("\n").append(" AND substr(A.ACL_CD2,1,4) = '" + util.strLeft(ht.get("acl_cd2").toString(),4) + "' ")
if(!ht.get("acl_cd3").equals("")) strSQL.append("\n").append(" AND A.ACL_CD2 = '" + ht.get("acl_cd3") + "' ")
if(!ht.get("user_nm").equals("")) strSQL.append("\n").append(" AND user_nm like '%"+ht.get("user_nm")+"%' ")
if(!ht.get("sdate").equals("")|| !ht.get("edate").equals("")) strSQL.append("\n").append("AND B.APPLY_DATE BETWEEN '" + ht.get("sdate") + "' AND '" + ht.get("edate") + "' ")
if(!ht.get("move_form").equals("")){strSQL.append("\n").append("and b.move_form = '"+ht.get("move_form")+"' ")}
if(!ht.get("room_kind").equals("")){strSQL.append("\n").append("and b.room_kind = '"+ht.get("room_kind")+"' ")}
if(!ht.get("std_code").equals("")){strSQL.append("\n").append("and std_code = '"+ht.get("std_code")+"' ")}
if(!ht.get("sex").equals("")){strSQL.append("\n").append("and sex = '"+ht.get("sex")+"' ")}

strSQL.append("\n").append("ORDER BY ")
if(ht.get("sortColumn").equals("std_no")){			strSQL.append(" LPAD(std_no,11,'0') ")		}
if(ht.get("sortColumn").equals("user_nm")){			strSQL.append(" USER_NM ")		}
if(ht.get("sortColumn").equals("VIRTUAL_ACCOUNT")){	strSQL.append(" VIRTUAL_ACCOUNT ")			}
if(ht.get("sortColumn").equals("room_kind_nm")){	strSQL.append(" room_kind_nm ")			}
if(ht.get("sortColumn").equals("move_form_nm")){	strSQL.append(" move_form_nm ")			}
if(ht.get("sortColumn").equals("IN_AMT_DATE")){		strSQL.append(" IN_AMT_DATE ")				}
if(ht.get("sortColumn").equals("TR_IL")){			strSQL.append(" TR_IL ")					}
if(!ht.get("sortColumn").equals("")){
	if(ht.get("sortType").equals("desc")){			strSQL.append(" DESC ")					}
	if(ht.get("sortType").equals("asc")){			strSQL.append(" ASC ")						}
}
if(ht.get("sortColumn").equals("")){				strSQL.append(" STD_NO desc ")				}

-------------------------------------------------------------------------------------------------------  apply_term_tb
SELECT recruit_year, recruit_code, fnc_get_code_nm(recruit_code) as recruit_code_nm, s_date, e_date, s_time, e_time
FROM apply_term_tb
WHERE to_char(sysdate,'YYYY-MM-DD hh24') >= s_date ||' ' ||case when length(s_time)=1 then '0'||s_time else s_time end 
and to_char(sysdate,'YYYY-MM-DD hh24') < e_date||' ' ||case when length(e_time)=1 then '0' ||e_time else e_time end 
and apply_code='3401000' 

SELECT rownum, att_TB.*
FROM apply_term_tb att_TB
where 1<= rownum -- recommanded code
AND rownum <= 1
SELECT recruit_year, recruit_code, fnc_get_code_nm(recruit_code) as recruit_code_nm, s_date, e_date
FROM apply_term_tb
WHERE to_char(sysdate,'YYYY-MM-DD') between s_date and e_date
and apply_code='3401000' 
	
SELECT *
from apply_term_tb
SELECT to_char(sysdate,'YYYY-MM-DD')
from apply_term_tb
SELECT to_char(sysdate,'YYYY-MM-DD hh24') 
from apply_term_tb
SELECT recruit_year, recruit_code 
FROM apply_term_tb	
WHERE apply_code='3401000' 
AND ? BETWEEN S_DATE AND E_DATE		 
		
SELECT recruit_year,recruit_code,s_date,e_date 
From (Select *
from apply_term_tb 
WHERE apply_code='3401000' 
AND ( apply_unit= fnc_get_apply_unit(recruit_year,recruit_code,'" + id_no + "') or apply_unit='6111000')
ORDER BY recruit_year DESC,recruit_code DESC )  
where  ROWNUM = 1 
SELECT recruit_year,recruit_code,apply_code,s_date,apply_unit 
FROM apply_term_tb
WHERE TO_CHAR(SYSDATE,'YYYY-MM-DD') BETWEEN s_date AND e_date	
AND apply_code='3401000'	
--where apply_code='3401000'
AND ( apply_unit=fnc_get_apply_unit(recruit_year,recruit_code,'" + id_no + "') or apply_unit='6111000')		
ORDER BY s_date DESC
	
-------------------------------------------------------------------------------------------------------  code_tb
SELECT * 
FROM code_tb
SELECT * 
FROM code_tb 
WHERE code_fcd IS NOT NULL  
SELECT CODE_FCD , CODE_NM , USE_YN ,REG_DATE , REG_ID 
FROM CODE_TB ct
SELECT CODE_FCD , CODE_NM , USE_YN ,REG_DATE , REG_ID 
FROM CODE_TB ct
WHERE CODE_LCD ='61'
SELECT CODE_FCD , CODE_NM , USE_YN ,REG_DATE , REG_ID 
FROM CODE_TB ct
WHERE CODE_FCD = '6111000'
SELECT CODE_FCD , CODE_NM , USE_YN ,REG_DATE , REG_ID 
FROM CODE_TB ct
WHERE CODE_LCD = '24'
-------------------------------------------------------------------------------------------------------  keepout_tb
SELECT *
from keepout_tb
select substr(st_time,1,2) as st_time,substr(en_time,1,2) as en_time 
from keepout_tb
where type='KEEPOUT' 
-------------------------------------------------------------------------------------------------------  VACS_VACT 
SELECT * 
FROM VACS_VACT -- org_cd.200005688 // ����ڵ�.?
SELECT * 
FROM VACS_VACT 
WHERE TR_AMT IS NOT NULL
SELECT VV.ACCT_NO  , COUNT(*) AS �ߺ����� 
FROM VACS_VACT VV  -- VACS_VACT.ACCT_NO���� �ߺ����� ����
 GROUP BY VV.ACCT_NO
HAVING COUNT(*) > 1 
SELECT VV_.* -- VACS_VACT.ACCT_NO���� �ߺ����� ��ȸ
 
from (
        SELECT VV.ACCT_NO 
             , COUNT(*) OVER(PARTITION BY VV.ACCT_NO) AS �ߺ���
         
from VACS_VACT VV
          ) VV_
  WHERE VV_.�ߺ��� > 1 
 
SELECT * 
FROM VACS_VACT 
WHERE CMS_CD IS NOT NULL-- CMS_CD.?   sample RECORD �� ã�� ���Ͽ����ϴ�.
-------------------------------------------------------------------------------------------------------  SCH_SCHEDULE_TB
-- �б� ���������� ��� ���� �ʽ��ϴ�.
SELECT * 
FROM SCH_SCHEDULE_TB
SELECT rownum, sst.* 
FROM SCH_SCHEDULE_TB sst
WHERE 1 <= rownum 
AND rownum <= 1
SELECT rownum, sst.* 
FROM SCH_SCHEDULE_TB sst
WHERE GUBUN IS NOT NULL 
ORDER BY kotitle desc
SELECT rownum, sst.* 
FROM SCH_SCHEDULE_TB sst
ORDER BY kotitle desc
-------------------------------------------------------------------------------------------------------  edu_schedule_tb 
SELECT * 
FROM edu_schedule_tb 
WHERE TO_CHAR(SYSDATE,'YYYY-MM-DD') BETWEEN s_date AND e_date
AND use_yn='Y'  
order by S_DATE ASC 
SELECT * 
FROM edu_schedule_tb 
WHERE TO_CHAR(SYSDATE,'YYYY-MM-DD') BETWEEN s_date AND e_date
AND use_yn='Y'  
order by S_DATE ASC 
SELECT * 
FROM edu_schedule_tb 
order by S_DATE ASC 
-- sysdate ������ ��¥
SELECT TO_CHAR(SYSDATE, 'YYYY MM DD HH24 MI SS') AS �ý��۽ð�
FROM edu_schedule_tb est 
SELECT rownum, est.* 
FROM edu_schedule_tb est
WHERE reg_id='withvision'
AND 1<= rownum 
AND rownum <= 1
------------------------------------------------------------------------------------------------------- etc_announce
SELECT * 
FROM etc_announce
------------------------------------------------------------------------------------------------------- dorm_ipsa_title_tb
select *   
from dorm_ipsa_title_tb   
where use_yn = 'Y'      
ORDER BY RECRUIT_YEAR ASC 
------------------------------------------------------------------------------------------------------- dorm_ipsa_detail_tb
SELECT COUNT(*) 
FROM dorm_ipsa_detail_tb

SELECT * 
FROM dorm_ipsa_detail_tb
 
select sex,acl_cd2,room_kind,to_num
from dorm_ipsa_detail_tb   
WHERE TO_NUM <> 0
AND sex = 1502000
AND ACL_CD2 = 1902001
ORDER BY sex ASC, ROOM_KIND ASC, acl_cd2 ASC
------------------------------------------------------------------------------------------------------- standard_log  
-- it is related to administrater C/U/D action log 
-- it is related to administrater C/U/D work history 
SELECT count(*) 
FROM standard_log
SELECT * 
FROM standard_log
SELECT * 
FROM standard_log
WHERE USE_MENU IS NOT NULL 
ORDER BY USE_MENU DESC 
-------------------------------------------------------------------------------------------------------  dual
SELECT fnc_get_phone_num('"+cel+"') as cel  , fnc_get_phone_num('"+tel+"') as tel   
from dual




