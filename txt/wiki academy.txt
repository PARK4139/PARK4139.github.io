______________________________________________________________________________________  <  html  ]
semantic tags.
empty tag
<br/>
html에서 DOM : Document Object Model 


______________________________________________________________________________________  <  html snippet for submitting form. ]
<form></form> is important tag that can help to request some data to server.
<form></form> can submit data to server.
<form method:"TBD" ></form>	
*
<form action:"#"></form>	
set location that we send data to #, # means nowhere. it is used frequently.
<input type:"reset" value:"reset form button">
reset form
<input type:"submit" value:"submittion button">
submit form

______________________________________________________________________________________  <  entity ]
______________________________________________________________________________________  <  entity is for avoiding reserved words. ]
______________________________________________________________________________________  <  이건 html에서만 사용되는 건가? 공용인건가?]
&lt; <
&gt; >
&nbsp;	( non-breaking space. ) ( space bar once. without linefeed	)$
&amp;	
&quot;	 means double quatation
&apos;	means apostropy




______________________________________________________________________________________  <    >
document.getElementById(id01) 이거보다는 document.querySelector("#id01")를 사용하자.
html에서 <fieldset></fieldset> 내에서 can enter texts as title by using <legend></legend>.

______________________________________________________________________________________  <  paragraph tag's auto converting ]
paragraph tag's auto converting several spacing to 1 spacing
paragraph tag's auto converting several line break to 1 line break



______________________________________________________________________________________  <  html  ]
______________________________________________________________________________________  <  event bubbling  ]
______________________________________________________________________________________  <   child  element에서 이벤트발생시  parents  element 로 전달되는 특성  ]
______________________________________________________________________________________  <  동적태그에 이벤트 추가  ]
______________________________________________________________________________________  <  event 버블링 활용  ]
______________________________________________________________________________________  <  e.target 변수를 활성 시켜 우리가 원하는 동적태그들에게 이벤트를 할당  ]
______________________________________________________________________________________  <  동적으로 할당되는 요소들을 포함하는  parents  요소에 이벤트 할당  ]
______________________________________________________________________________________  <  if e.target == 어떤 요소면 이벤트 적용  ]
______________________________________________________________________________________  <  html ]
______________________________________________________________________________________  <  event binding ]
______________________________________________________________________________________  <  event binding way recommanded by *]
document.querySelector("#id01").addEventListener("click", function )



______________________________________________________________________________________  <  {pseudo-class || 수도 class || 슈도 class || 가상 class || 의사 class } 
link1
visited
hover
active
focus
checked
enabled : default
disabled :
______________________________________________________________________________________  <  input pattern property __________________________________________________________________
1. 숫자만
<input type="text" name="patternValue" pattern="\d*">
<input type="text" name="patternValue" pattern="^[0-9]+$">
 
2. 영문 대소문자만
<input type="text" name="patternValue" pattern="^[a-zA-Z]+$">
3. 영문 대소문자만 (띄어쓰기 및 공백 가능)
<input type="text" name="patternValue" pattern="^[a-zA-Z\s]+$">
4. 숫자, 영문 대소문자만
<input type="text" name="patternValue" pattern="^[a-zA-Z0-9]+$">
5. 최소 8자리에서 최대 16자리까지 숫자, 영문, 특수문자 각 1개 이상 포함 (암호 유효성 검사에 유용)
<input type="text" name="patternValue" pattern="^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&])[A-Za-z\d$@$!%*#?&]{8,16}$">
pattern = "(010|011)-\d{3,4}-\d{4}" 이건 맞는지 모르겠다... debugging을 못하겠다..
______________________________________________________________________________________  <  input tag required property __________________________________________________________________
required property를 명시하지 않으면 속성값이 자동으로 false 값을 가지게 되며, 명시하면 자동으로 true 값
form data 중에 반드시 채워져야 하는 data에게 표시하면된다. id 같은 form data에 부여하면 될 것 같다.
#id01, #id02, #id03 {}	: ("," 로서 구분)
.class01, .class02, .class03 {}	: ("," 로서 구분)
#id01, .class01, .class02 {}	: ("," 로서 구분)
div div {}	: 자손선택 ( " " 로서 구분)
div p {}	: 자손선택 ( " " 로서 구분)
div > div {}	:  child 선택
div > p {}
div ~ div {}	 : 형제 선택 ( usual sibling selector )
div ~ p {}
div + div {} : 바로 뒤 형제 하나 선택 ( 첫번 째 형제를 의미하는 것 같다.) ( 인접 sibling selector )
div + p {}
div ~ p {
div > p {
text-decolation: line-through;
}	

______________________________________________________________________________________  <  ( when we do web developement, we should keep below things. it is pretty necesscary. )
W3C의 권고안 을 따를 필요가 있다.
<img> property의 src와 alt를 작성을 W3C에서 권고
empty tag들의 마지막을 />로 표현하시오...
...
use sementic element.
Web Accessibility
